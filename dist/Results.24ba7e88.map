{"version":3,"sources":["Pet.js","actionCreators/getBreeds.js","actionCreators/changeBreed.js","actionCreators/changeAnimal.js","actionCreators/changeLocation.js","SearchBox.js","Results.js"],"names":["Pet","React","Component","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","petfinder","key","secret","getBreeds","dispatch","getState","list","then","data","breeds","Array","isArray","type","payload","changeBreed","changeAnimal","changeLocationl","SearchBox","handleFormSubmit","event","preventDefault","search","handleLocationChange","handleAnimalChange","ANIMALS","map","handleBreedChange","length","mapStateToProps","mapDispatchToProps","target","Results","pet","find","output","pets","setState","state","join","contact","city"],"mappings":"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","file":"Results.24ba7e88.map","sourceRoot":"../src","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n//Stateless functional component\nclass Pet extends React.Component {\n  render() {\n    const { name, animal, breed, media, location, id } = this.props;\n\n    let photos = [];\n\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => {\n        return photo[\"@size\"] === \"pn\";\n      });\n    }\n\n    const hero = photos[0] ? photos[0].value : \"http://placecorgi.com/300/300\";\n\n    return (\n      <Link to={`/details/${id}`} className=\"pet\">\n        <div className=\"image-container\">\n          <img src={hero} alt={name} />\n        </div>\n        <div className=\"info\">\n          <h1>{name}</h1>\n          <h2>\n            {animal} - {breed} - {location}\n          </h2>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pet;\n","import pf from \"petfinder-client\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nexport default function getBreeds() {\n  //needs to return a \"thunk\" --- a function, really\n  return function getBreedsThunk(dispatch, getState) {\n    const { animal } = getState();\n    if (animal) {\n      petfinder.breed.list({ animal: animal }).then(data => {\n        if (\n          data.petfinder &&\n          data.petfinder.breeds &&\n          Array.isArray(data.petfinder.breeds.breed)\n        ) {\n          dispatch({\n            type: \"SET_BREEDS\",\n            payload: data.petfinder.breeds.breed\n          });\n        } else {\n          dispatch({ type: \"SET_BREEDS\", payload: [] });\n        }\n      });\n    } else {\n      dispatch({ type: \"SET_BREEDS\", payload: [] });\n    }\n  };\n}\n","export default function changeBreed(breed) {\n  return { type: \"SET_BREED\", payload: breed };\n}\n","export default function changeAnimal(animal) {\n  return { type: \"SET_ANIMAL\", payload: animal };\n}\n","export default function changeLocationl(location) {\n  return { type: \"SET_LOCATION\", payload: location };\n}\n","import React from \"react\";\nimport { ANIMALS } from \"petfinder-client\";\nimport { connect } from \"react-redux\";\nimport getBreeds from \"./actionCreators/getBreeds\";\nimport changeBreed from \"./actionCreators/changeBreed\";\nimport changeAnimal from \"./actionCreators/changeAnimal\";\nimport changeLocation from \"./actionCreators/changeLocation\";\n\nclass SearchBox extends React.Component {\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.props.search();\n  };\n  render() {\n    return (\n      <div className=\"search-params\">\n        <form onSubmit={this.handleFormSubmit}>\n          <label htmlFor=\"location\">\n            Location\n            <input\n              onChange={this.props.handleLocationChange}\n              id=\"location\"\n              value={this.props.location}\n              placeholder=\"Location\"\n            />\n          </label>\n          <label htmlFor=\"animal\">\n            Animal\n            <select\n              id=\"animal\"\n              value={this.props.animal}\n              onChange={this.props.handleAnimalChange}\n              onBlur={this.props.handleAnimalChange}\n            >\n              <option />\n              {ANIMALS.map(animal => {\n                return (\n                  <option key={animal} value={animal}>\n                    {animal}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n          <label htmlFor=\"breed\">\n            Breed\n            <select\n              id=\"breed\"\n              value={this.props.breed}\n              onChange={this.props.handleBreedChange}\n              onBlur={this.props.handleBreedChange}\n              disabled={!this.props.breeds.length}\n            >\n              <option />\n              {this.props.breeds.map(breed => {\n                return (\n                  <option key={breed} value={breed}>\n                    {breed}\n                  </option>\n                );\n              })}\n            </select>\n            <button>Submit</button>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n//from redux store\nconst mapStateToProps = ({ breed, breeds, animal, location }) => ({\n  breed,\n  breeds,\n  animal,\n  location\n});\n\n//from actions\nconst mapDispatchToProps = dispatch => ({\n  handleAnimalChange(event) {\n    //dispatch gives an action to redux\n    dispatch(changeAnimal(event.target.value));\n    dispatch(getBreeds());\n  },\n  handleBreedChange(event) {\n    dispatch(changeBreed(event.target.value));\n  },\n  handleLocationChange(event) {\n    dispatch(changeLocation(event.target.value));\n  }\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBox);\n","import React from \"react\";\nimport pf from \"petfinder-client\";\nimport Pet from \"./Pet\";\nimport SearchBox from \"./SearchBox\";\nimport { connect } from \"react-redux\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nclass Results extends React.Component {\n  //gets called once per component\n  //props immutable, state is changeable\n  //state stays at the same level\n  //state = things that can change\n  constructor(props) {\n    super(props);\n    this.state = {\n      pets: []\n    };\n  }\n  componentDidMount() {\n    this.search();\n  }\n  search = () => {\n    petfinder.pet\n      .find({\n        output: \"full\",\n        location: this.props.location,\n        animal: this.props.animal,\n        breed: this.props.breed\n      })\n      .then(data => {\n        let pets;\n        if (data.petfinder.pets && data.petfinder.pets.pet) {\n          if (Array.isArray(data.petfinder.pets.pet)) {\n            pets = data.petfinder.pets.pet;\n          } else {\n            pets = [data.petfinder.pets.pet];\n          }\n        } else {\n          pets = [];\n        }\n\n        this.setState({ pets }); //could be pets: pets\n      });\n  };\n  render() {\n    return (\n      <div className=\"search\">\n        <SearchBox search={this.search} />\n        {this.state.pets.map(pet => {\n          let breed;\n          if (Array.isArray(pet.breeds.breed)) {\n            breed = pet.breeds.breed.join(\", \");\n          } else {\n            breed = pet.breeds.breed;\n          }\n          return (\n            <Pet\n              key={pet.id}\n              animal={pet.animal}\n              name={pet.name}\n              breed={breed}\n              media={pet.media}\n              location={`${pet.contact.city}, ${pet.contact.state}`}\n              id={pet.id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n//injects location as a prop to context which then passes to Results\nconst mapStateToProps = ({ location, breed, animal }) => ({\n  location,\n  breed,\n  animal\n});\n//connects results to react store\nexport default connect(mapStateToProps)(Results);\n"]}