{"version":3,"sources":["Carousel.js","Modal.js","Details.js"],"names":["Carousel","state","photos","active","handleIndexClick","event","setState","target","dataset","index","React","Component","value","map","photo","media","filter","Modal","props","el","document","createElement","modalRoot","getElementById","appendChild","removeChild","children","Details","loading","LoadableContent","loader","petfinder","key","secret","showModal","toggleModal","pet","get","output","id","then","data","breed","Array","isArray","breeds","join","name","animal","location","contact","city","description","catch"],"mappings":"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","file":"Details.e483937d.map","sourceRoot":"../src","sourcesContent":["import React from \"react\";\n\nclass Carousel extends React.Component {\n  state = {\n    photos: [],\n    active: 0\n  };\n\n  static getDerivedStateFromProps({ media }) {\n    let photos = [];\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    return { photos };\n  }\n  //arrow function refers to whatever lexical scope it's defined!!!  Yes!  if I wrote it as a normal function, we'd have\n  //to bind this in the constructor\n  handleIndexClick = event => {\n    //plus sign coerces string to number\n    this.setState({\n      active: +event.target.dataset.index\n    });\n  };\n  render() {\n    const { photos, active } = this.state;\n    return (\n      <div className=\"carousel\">\n        <img src={photos[active].value} alt=\"primary animal\" />\n        <div className=\"carousel-smaller\">\n          {photos.map((photo, index) => (\n            /* eslint-disable-next-line */\n            <img\n              onClick={this.handleIndexClick}\n              data-index={index}\n              key={photo.value}\n              src={photo.value}\n              className={index === active ? \"active\" : \"\"}\n              alt=\"animal thumbnail\"\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.el = document.createElement(\"div\");\n    this.modalRoot = document.getElementById(\"modal\");\n    this.modalRoot.appendChild(this.el);\n  }\n  componentWillUnmount() {\n    this.modalRoot.removeChild(this.el);\n  }\n  render() {\n    return createPortal(this.props.children, this.el);\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport pf from \"petfinder-client\";\nimport { navigate } from \"@reach/router\";\nimport Loadable from \"react-loadable\";\nimport Carousel from \"./Carousel\";\nimport Modal from \"./Modal\";\n\nconst loading = () => <h1>loading content...</h1>;\n\nconst LoadableContent = Loadable({\n  loader: () => import(\"./AdoptModalContent\"),\n  loading\n});\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nclass Details extends React.Component {\n  //shortcut for constructor plus super(props)\n  state = {\n    loading: true,\n    showModal: false\n  };\n\n  toggleModal = () => {\n    this.setState({ showModal: !this.state.showModal });\n  };\n\n  componentDidMount() {\n    petfinder.pet\n      .get({\n        output: \"full\",\n        id: this.props.id\n      })\n      .then(data => {\n        const pet = data.petfinder.pet;\n        let breed;\n        if (Array.isArray(pet.breeds.breed)) {\n          breed = pet.breeds.breed.join(\", \");\n        } else {\n          breed = pet.breeds.breed;\n        }\n\n        this.setState({\n          name: pet.name,\n          animal: pet.animal,\n          location: `${pet.contact.city}, ${pet.contact.state}`,\n          description: pet.description,\n          media: pet.media,\n          breed,\n          loading: false\n        });\n      })\n      .catch(() => {\n        navigate(\"/\");\n      });\n  }\n  render() {\n    if (this.state.loading) {\n      return <h1>loading</h1>;\n    }\n    const {\n      name,\n      animal,\n      breed,\n      location,\n      description,\n      media,\n      showModal\n    } = this.state;\n\n    return (\n      <div className=\"details\">\n        <Carousel media={media} />\n        <div>\n          <h1>{name}</h1>\n          <h2>\n            {animal} - {breed} - {location}\n          </h2>\n          <button onClick={this.toggleModal}>Adopt {name}</button>\n          <p>{description}</p>\n          {showModal ? (\n            <Modal>\n              <LoadableContent toggleModal={this.toggleModal} name={name} />\n            </Modal>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n"]}